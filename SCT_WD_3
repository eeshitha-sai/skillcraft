<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tic Tac Toe</title>
  <style>
    body {
      background: linear-gradient(to bottom right, #00f260, #0575e6);
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding-top: 50px;
      color: white;
    }

    .title {
      font-size: 48px;
      margin-bottom: 30px;
    }

    .game-board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 10px;
    }

    .cell {
      width: 100px;
      height: 100px;
      font-size: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: white;
      color: #333;
      border-radius: 12px;
      cursor: pointer;
    }

    .cell:hover {
      background: #ffe53b;
      transform: scale(1.05);
    }

    .status {
      font-size: 24px;
      margin: 20px;
    }

    button {
      padding: 10px 20px;
      font-size: 16px;
      border: none;
      border-radius: 10px;
      background: #ff416c;
      color: white;
      cursor: pointer;
    }

    button:hover {
      background: #ff4b2b;
    }
  </style>
</head>
<body>
  <h1 class="title">Tic Tac Toe</h1>
  <div class="game-board" id="board"></div>
  <h2 class="status" id="status">Player X's Turn</h2>
  <button onclick="resetGame()">Restart</button>

  <script>
    const board = document.getElementById('board');
    const statusText = document.getElementById('status');

    let currentPlayer = 'X';
    let gameState = Array(9).fill('');
    let gameActive = true;

    const winningCombos = [
      [0,1,2], [3,4,5], [6,7,8],
      [0,3,6], [1,4,7], [2,5,8],
      [0,4,8], [2,4,6]
    ];

    for (let i = 0; i < 9; i++) {
      const cell = document.createElement('div');
      cell.classList.add('cell');
      cell.dataset.index = i;
      board.appendChild(cell);
      cell.addEventListener('click', handleClick);
    }

    function handleClick(e) {
      const index = e.target.dataset.index;

      if (!gameState[index] && gameActive) {
        gameState[index] = currentPlayer;
        e.target.textContent = currentPlayer;

        if (checkWinner()) {
          statusText.textContent = `Player ${currentPlayer} Wins! 🎉`;
          gameActive = false;
        } else if (gameState.every(cell => cell !== '')) {
          statusText.textContent = `It's a Draw! 🤝`;
          gameActive = false;
        } else {
          currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
          statusText.textContent = `Player ${currentPlayer}'s Turn`;
        }
      }
    }

    function checkWinner() {
      return winningCombos.some(combo => {
        const [a, b, c] = combo;
        return gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c];
      });
    }

    function resetGame() {
      gameState = Array(9).fill('');
      currentPlayer = 'X';
      gameActive = true;
      statusText.textContent = `Player ${currentPlayer}'s Turn`;
      document.querySelectorAll('.cell').forEach(cell => cell.textContent = '');
    }
  </script>
</body>
</html>
